#include "commands.h"

void handleStartCommand(TgBot::Bot &bot, std::unordered_map<int64_t, User> &users, TgBot::Message::Ptr message) {
  if (!users[message->chat->id].isTyping) {
    bot.getApi().sendMessage(message->chat->id,
                             "–ü—Ä–∏–≤–µ—Ç! \nüëã –Ø –≠–ñ–° (–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –ñ—É—Ä–Ω–∞–ª –°—Ç—É–¥–µ–Ω—Ç–∞) ‚Äì –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —É—á–µ–±–µ. \nüìö –° –º–æ–µ–π –ø–æ–º–æ—â—å—é –≤—ã –º–æ–∂–µ—Ç–µ: \n‚úÖ "
                             "–°–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–µ–∫—É—â–∏–º–∏ –¥–æ–º–∞—à–Ω–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏ –∏ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏ \n‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ—é —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å \n‚úÖ –ü–æ–ª—É—á–∞—Ç—å "
                             "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö –∏ –æ—Ü–µ–Ω–∫–∞—Ö \n–ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /register, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –Ω–∞—á–∞—Ç—å "
                             "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!\n–£–¥–∞—á–∏ –≤ —É—á–µ–±–µ! üöÄ");
  }
}

void handleRegisterCommand(TgBot::Bot &bot, UserDataBase &userDataBase, std::unordered_map<int64_t, User> &users, TgBot::Message::Ptr message) {
  if (!userDataBase.isRegistered(message->chat->id)) {
    users[message->chat->id].isTyping = true;
    users[message->chat->id].process = Process::ProcessEnum::registration;
    bot.getApi().sendMessage(message->chat->id,
                             "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n–ì—Ä—É–ø–ø–∞:–§–ò–û:–ü–∞—Ä–æ–ª—å\nex: –ò–£7-15–ë:–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á:123\n/cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã");
  } else {
    bot.getApi().sendMessage(message->chat->id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã");
  }
}

void handleMenuCommand(TgBot::Bot &bot, UserDataBase &userDataBase, std::unordered_map<int64_t, User> &users, TgBot::Message::Ptr message) {
  if (!users[message->chat->id].isTyping) {
    if (userDataBase.isRegistered(message->chat->id)) {
      bot.getApi().sendMessage(message->chat->id, "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é", false, 0, mainMenu());
    } else {
      bot.getApi().sendMessage(message->chat->id, "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞. –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register");
    }
  }
}

void handleCancelCommand(TgBot::Bot &bot, UserDataBase &userDataBase, std::unordered_map<int64_t, User> &users, TgBot::Message::Ptr message) {
  if (users[message->chat->id].isTyping) {
    users[message->chat->id].isTyping = false;
    bot.getApi().sendMessage(message->chat->id, "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞", false, 0, returnToMenu());
  }
}